name: Build CAN Server

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup environment
      run: |
        g++ --version
        make --version
    
    - name: Build server
      run: make output/server
    
    - name: Verify build
      run: |
        ls -lh output/
        file output/server
    
    - name: Create artifacts directory
      run: mkdir -p artifacts
    
    - name: Copy server binary
      run: cp output/server artifacts/server
    
    - name: Build statically-linked server
      run: |
        g++ -std=c++20 -Wall -pthread -static-libstdc++ -static-libgcc \
          server.cpp -o artifacts/server-static
    
    - name: Verify all builds
      run: |
        echo "=== All artifacts ==="
        ls -lh artifacts/
        echo ""
        echo "=== File types ==="
        file artifacts/*
        echo ""
        echo "=== Dynamic dependencies (standard) ==="
        ldd artifacts/server || true
        echo ""
        echo "=== Dynamic dependencies (static) ==="
        ldd artifacts/server-static || echo "Fully static (no dependencies)"
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: can-server-binaries
        path: |
          artifacts/server
          artifacts/server-static
        retention-days: 30
    
    - name: Create release archives
      if: github.ref == 'refs/heads/main'
      run: |
        cd artifacts
        tar -czf can-server-linux-x64.tar.gz server
        tar -czf can-server-linux-x64-static.tar.gz server-static
        sha256sum *.tar.gz > checksums.txt
    
    - name: Upload release archives
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: release-archives
        path: |
          artifacts/*.tar.gz
          artifacts/checksums.txt
        retention-days: 90

  build-arm64:
    runs-on: ubuntu-24.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install ARM64 cross-compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y g++-aarch64-linux-gnu
    
    - name: Verify ARM64 toolchain
      run: |
        aarch64-linux-gnu-g++ --version
        echo "C++ includes path:"
        aarch64-linux-gnu-g++ -E -x c++ - -v < /dev/null 2>&1 | grep -A 10 "#include"
    
    - name: Build ARM64 server (dynamic)
      run: |
        mkdir -p artifacts-arm64
        aarch64-linux-gnu-g++ -std=c++20 -Wall -pthread \
          server.cpp -o artifacts-arm64/server-arm64
    
    - name: Build ARM64 server (fully static)
      run: |
        aarch64-linux-gnu-g++ -std=c++20 -Wall -pthread \
          -static \
          server.cpp -o artifacts-arm64/server-arm64-static
    
    - name: Build ARM64 server (partial static - fallback)
      if: failure()
      run: |
        echo "Full static build failed, trying partial static..."
        aarch64-linux-gnu-g++ -std=c++20 -Wall -pthread \
          -static-libstdc++ -static-libgcc \
          server.cpp -o artifacts-arm64/server-arm64-static
    
    - name: Verify ARM64 builds
      run: |
        echo "=== Build artifacts ==="
        ls -lh artifacts-arm64/
        echo ""
        echo "=== File types ==="
        file artifacts-arm64/server-arm64
        file artifacts-arm64/server-arm64-static
        echo ""
        echo "=== Dynamic binary dependencies ==="
        aarch64-linux-gnu-readelf -d artifacts-arm64/server-arm64 | grep NEEDED || true
        echo ""
        echo "=== Static binary dependencies ==="
        aarch64-linux-gnu-readelf -d artifacts-arm64/server-arm64-static | grep NEEDED || echo "Fully static (no dependencies)"
    
    - name: Upload ARM64 artifacts
      uses: actions/upload-artifact@v4
      with:
        name: can-server-arm64-binaries
        path: artifacts-arm64/*
        retention-days: 30
    
    - name: Create ARM64 release archives
      if: github.ref == 'refs/heads/main'
      run: |
        cd artifacts-arm64
        tar -czf can-server-linux-arm64.tar.gz server-arm64
        tar -czf can-server-linux-arm64-static.tar.gz server-arm64-static
        sha256sum *.tar.gz > checksums-arm64.txt
    
    - name: Upload ARM64 release archives
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: release-archives-arm64
        path: |
          artifacts-arm64/*.tar.gz
          artifacts-arm64/checksums-arm64.txt
        retention-days: 90
